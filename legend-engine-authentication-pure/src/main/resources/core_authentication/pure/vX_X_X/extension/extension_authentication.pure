// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::mapping::*;

import meta::external::store::service::metamodel::*;
import meta::external::store::service::metamodel::mapping::*;
import meta::external::store::service::metamodel::runtime::*;
import meta::pure::functions::collection::*;

function meta::protocols::pure::vX_X_X::extension::store::service::getAuthenticationExtension(type:String[1]):meta::pure::extension::SerializerExtension[1]
{
   let res = [
      pair('authentication', | meta::protocols::pure::vX_X_X::extension::store::service::getAuthenticationExtension())
   ]->filter(f|$f.first == $type);
   assert($res->isNotEmpty(), |'Can\'t find the type '+$type);
   $res->at(0).second->eval();
}

function meta::protocols::pure::vX_X_X::extension::store::service::getAuthenticationExtension():meta::protocols::pure::vX_X_X::extension::SerializerExtension_vX_X_X[1]
{
   ^meta::protocols::pure::vX_X_X::extension::SerializerExtension_vX_X_X
   (
      transfers_authentication_transformAuthentication = { extensions:meta::pure::extension::Extension[*] |
          [
             authentication:Authentication[1] | $authentication->meta::protocols::pure::vX_X_X::transformation::fromPureGraph::authentication::transformAuthentication($extensions)
          ]}
   )
}
